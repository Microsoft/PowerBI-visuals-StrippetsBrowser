/**
 * Copyright (c) 2016 Uncharted Software Inc.
 * http://www.uncharted.software/
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

.mainOutlineContent {
  float: left;
  height: calc(100% - #{$outline-header-height});
  height: -webkit-calc(100% - #{$outline-header-height});
  .title {
    border-bottom: 1px dotted #E9E7E6;
    width: inherit;
    position: absolute;
    height: $outline-title-height;

    .centering-container {
      color: #777777;
      overflow: hidden;
      text-overflow: ellipsis;
      text-align: center;
      font-size: 9px;
      width: auto;
      height: auto;
      max-height: $outline-title-height;
      padding-left: 0.3em;
      padding-right: 0.3em;
      transform: translate(0, -1em) translate(0, -50%) translate(0, $outline-title-height * 0.5);
    }

  }
  .entityContainer {
    position: relative;
    top: 0;
    height: calc(100% - #{$entity-height} - #{$footer-space});
    height: -webkit-calc(100% - #{$entity-height} - #{$footer-space});
  }
}

.expand-enabled .mainOutlineContent {
    .entityContainer {
      top: $outline-title-height;
      height: calc(100% - #{$outline-title-height} - #{$entity-height} - #{$footer-space});
      height: -webkit-calc(100% - #{$outline-title-height} - #{$entity-height} - #{$footer-space});
    }
}

@import 'strippets.entity';
